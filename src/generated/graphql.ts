import gql from 'graphql-tag';
import * as Urql from 'urql';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** An ISO 8601-encoded date */
  ISO8601Date: any;
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: any;
  /** Represents untyped JSON */
  JSON: any;
  Upload: any;
};

export type Account = {
  __typename?: 'Account';
  annualMandate: Scalars['Float'];
  availableBalance: Scalars['Float'];
  balance: Scalars['Float'];
  blockedBalance: Scalars['Float'];
  id: Scalars['ID'];
  rebate: Scalars['Float'];
};

export type AccountInput = {
  /** Required for creating a new account. */
  annualMandate?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  /** Required for creating a new account. */
  rebate?: InputMaybe<Scalars['Float']>;
};

export type ActiveCode = {
  __typename?: 'ActiveCode';
  activityName: Scalars['String'];
  applicationId: Scalars['String'];
  codeEnd: Scalars['Int'];
  codeStart: Scalars['Int'];
  comment?: Maybe<Scalars['String']>;
  createdAt: Scalars['ISO8601DateTime'];
  dealer?: Maybe<Dealer>;
  id: Scalars['ID'];
  marketCode: MarketCode;
  productBrand: Scalars['String'];
  productCode: Scalars['String'];
  productTitle: Scalars['String'];
  wxaAppid: Scalars['String'];
  wxaPath: Scalars['String'];
  wxaType: Scalars['Int'];
};

export type Activity = {
  __typename?: 'Activity';
  conditions?: Maybe<Scalars['String']>;
  createdAt: Scalars['ISO8601DateTime'];
  description?: Maybe<Scalars['String']>;
  endAt: Scalars['ISO8601DateTime'];
  gift?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  name: Scalars['String'];
  needPurchased: Scalars['Boolean'];
  needSubcribed: Scalars['Boolean'];
  slTable: SlTable;
  startAt: Scalars['ISO8601DateTime'];
  updatedAt: Scalars['ISO8601DateTime'];
  user: User;
};

/** Autogenerated return type of ActivityCreate */
export type ActivityCreatePayload = {
  __typename?: 'ActivityCreatePayload';
  activity?: Maybe<Activity>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

export type ActivityInput = {
  conditions?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  /** [{"variant_id": 1, "quantity": 1}] */
  gift?: InputMaybe<Scalars['JSON']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  needPurchased?: InputMaybe<Scalars['Boolean']>;
  needSubcribed?: InputMaybe<Scalars['Boolean']>;
  slTable?: InputMaybe<SlTableInput>;
  startAt?: InputMaybe<Scalars['ISO8601DateTime']>;
};

/** Autogenerated return type of ActivityUpdate */
export type ActivityUpdatePayload = {
  __typename?: 'ActivityUpdatePayload';
  activity?: Maybe<Activity>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

export type AdReport = {
  __typename?: 'AdReport';
  /** 转化数据（计费时间）-转化数（计费时间） */
  attributionConvert: Scalars['Int'];
  /** 转化数据（计费时间）-转化成本（计费时间） */
  attributionConvertCost: Scalars['Float'];
  /** 转化数据（计费时间）-深度转化数（计费时间） */
  attributionDeepConvert: Scalars['Int'];
  /** 转化数据（计费时间）-深度转化成本（计费时间） */
  attributionDeepConvertCost: Scalars['Float'];
  /** 视频数据-平均单次播放时长 */
  averagePlayTimePerPlay: Scalars['Float'];
  /** 展现数据-平均点击单价 */
  avgClickCost: Scalars['Float'];
  /** 展现数据-平均千次展现费用 */
  avgShowCost: Scalars['Float'];
  /** 落地页转化数据-按钮button */
  button: Scalars['Int'];
  /** 转化数据-转化数 */
  convert: Scalars['Int'];
  /** 转化数据-转化成本 */
  convertCost: Scalars['Float'];
  /** 转化数据-转化率 */
  convertRate: Scalars['Float'];
  /** 展现数据-总花费 */
  cost: Scalars['Float'];
  /** 展现数据-点击率 */
  ctr: Scalars['Float'];
  /** 转化数据-深度转化数 */
  deepConvert: Scalars['Int'];
  /** 转化数据-深度转化成本 */
  deepConvertCost: Scalars['Float'];
  /** 转化数据-深度转化率 */
  deepConvertRate: Scalars['Float'];
  /** 展现数据-总成交 */
  paidAmount: Scalars['Float'];
  /** 视频数据-25%进度播放数 */
  play25FeedBreak: Scalars['Int'];
  /** 视频数据-50%进度播放数 */
  play50FeedBreak: Scalars['Int'];
  /** 视频数据-75%进度播放数 */
  play75FeedBreak: Scalars['Int'];
  /** 视频数据-100%进度播放数 */
  play100FeedBreak: Scalars['Int'];
  /** 视频数据-播放时长，单位ms */
  playDurationSum: Scalars['String'];
  /** 视频数据-播完率 */
  playOverRate: Scalars['Float'];
  /** 展现数据-ROI */
  roi: Scalars['Float'];
  /** 展现数据-展示数 */
  show: Scalars['Int'];
  /** 数据起始时间 */
  statDatetime: Scalars['String'];
  /** 视频数据-播放数 */
  totalPlay: Scalars['Int'];
  /** 视频数据-有效播放数 */
  validPlay: Scalars['Int'];
  /** 视频数据-有效播放成本 */
  validPlayCost: Scalars['Float'];
  /** 视频数据-有效播放率 */
  validPlayRate: Scalars['Float'];
  /** 落地页转化数据-关键页面浏览 */
  view: Scalars['Int'];
};

export type Address = {
  __typename?: 'Address';
  city: Scalars['String'];
  detail: Scalars['String'];
  district?: Maybe<Scalars['String']>;
  full: Scalars['String'];
  id: Scalars['ID'];
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
  province: Scalars['String'];
};

/** Attributes for address */
export type AddressInput = {
  city?: InputMaybe<Scalars['String']>;
  detail?: InputMaybe<Scalars['String']>;
  district?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  province?: InputMaybe<Scalars['String']>;
};

export type Advertiser = {
  __typename?: 'Advertiser';
  advertiserReports: Array<AdvertiserReport>;
  agent: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
};


export type AdvertiserAdvertiserReportsArgs = {
  endDate: Scalars['String'];
  startDate: Scalars['String'];
  timeGranularity?: InputMaybe<TimeGranularity>;
};

export type AdvertiserReport = {
  __typename?: 'AdvertiserReport';
  /** 投放渠道 */
  channel: Scalars['String'];
  /** 展现数据-点击数 */
  clickCount: Scalars['Int'];
  /** 展现数据-总花费 */
  cost: Scalars['Float'];
  /** 展现数据-点击率 */
  ctr: Scalars['Float'];
  /** 数据起始时间 */
  date: Scalars['String'];
  /** 展现数据-总成交 */
  paidAmount: Scalars['Float'];
  /** 展现数据-ROI */
  roi: Scalars['Float'];
  /** 展现数据-展示数 */
  showCount: Scalars['Int'];
};

/** 广告投放渠道 */
export enum AdvertiserReportChannel {
  /** AD */
  Ad = 'ad',
  /** 千川 */
  Qc = 'qc',
  /** UD */
  Ud = 'ud'
}

export type AdvertiserReportPage = {
  __typename?: 'AdvertiserReportPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<AdvertiserReport>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

export type Agent = {
  __typename?: 'Agent';
  advertiserReports: Array<AdReport>;
  id: Scalars['ID'];
  name: Scalars['String'];
};


export type AgentAdvertiserReportsArgs = {
  endDate: Scalars['String'];
  startDate: Scalars['String'];
  timeGranularity?: InputMaybe<TimeGranularity>;
};

export type App = {
  __typename?: 'App';
  appType?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']>;
  id?: Maybe<Scalars['ID']>;
  name?: Maybe<Scalars['String']>;
  parentId?: Maybe<Scalars['String']>;
  permissions?: Maybe<Array<Permission>>;
  url?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of AppCreate */
export type AppCreatePayload = {
  __typename?: 'AppCreatePayload';
  app?: Maybe<App>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

/** Attributes for app. */
export type AppInput = {
  appType: Scalars['Int'];
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  url: Scalars['String'];
};

export type AppPage = {
  __typename?: 'AppPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<App>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

/** Autogenerated return type of AppUpdate */
export type AppUpdatePayload = {
  __typename?: 'AppUpdatePayload';
  app?: Maybe<App>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

export type Audit = {
  __typename?: 'Audit';
  action: Scalars['String'];
  auditableId: Scalars['ID'];
  auditableType: Scalars['String'];
  auditedChanges: Scalars['JSON'];
  auditedTitle?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  createdAt: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  remoteAddress?: Maybe<Scalars['String']>;
  user?: Maybe<User>;
};

export type AuditPage = {
  __typename?: 'AuditPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<Audit>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

export type Category = {
  __typename?: 'Category';
  createdAt: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  name: Scalars['String'];
  position?: Maybe<Scalars['Int']>;
  /** Find all products */
  products?: Maybe<Array<Product>>;
  updatedAt: Scalars['ISO8601DateTime'];
};


export type CategoryProductsArgs = {
  published?: InputMaybe<Scalars['Boolean']>;
  withCategory?: InputMaybe<Scalars['ID']>;
  withInventoryWarning?: InputMaybe<Scalars['Boolean']>;
};

/** Autogenerated return type of CategoryCreate */
export type CategoryCreatePayload = {
  __typename?: 'CategoryCreatePayload';
  category?: Maybe<Category>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

export type CategoryInput = {
  id?: InputMaybe<Scalars['ID']>;
  /** Required for creating a new category. */
  name?: InputMaybe<Scalars['String']>;
  /** Required for creating a new category. */
  position?: InputMaybe<Scalars['Int']>;
};

/** Autogenerated return type of CategoryUpdate */
export type CategoryUpdatePayload = {
  __typename?: 'CategoryUpdatePayload';
  category?: Maybe<Category>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

export type Charge = {
  __typename?: 'Charge';
  amount: Scalars['Float'];
  attachments?: Maybe<Array<Scalars['String']>>;
  chargedAt: Scalars['ISO8601DateTime'];
  dealer: Dealer;
  id: Scalars['ID'];
  notes?: Maybe<Scalars['String']>;
  orders?: Maybe<Array<Order>>;
  /** pendding, approved */
  state: Scalars['String'];
};

/** Autogenerated return type of ChargeCreate */
export type ChargeCreatePayload = {
  __typename?: 'ChargeCreatePayload';
  charge?: Maybe<Charge>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

/** Attributes for charge. */
export type ChargeInput = {
  amount?: InputMaybe<Scalars['Float']>;
  /** Signed blob ID generated via `DirectUploadcreate` mutation */
  attachments?: InputMaybe<Array<Scalars['String']>>;
  chargedAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  dealerId?: InputMaybe<Scalars['ID']>;
  id?: InputMaybe<Scalars['ID']>;
  notes?: InputMaybe<Scalars['String']>;
};

export type ChargePage = {
  __typename?: 'ChargePage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<Charge>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

export type CostVerify = {
  __typename?: 'CostVerify';
  combined?: Maybe<Array<Variant>>;
  invalidFinishedCost?: Maybe<Array<Variant>>;
  invalidOriginCost?: Maybe<Array<Variant>>;
  leaves?: Maybe<Array<Variant>>;
  notEqual?: Maybe<Array<Variant>>;
  total: Scalars['Int'];
};

export type Dashboard = {
  __typename?: 'Dashboard';
  annualCharge: Scalars['Float'];
  annualExpense: Scalars['Float'];
  annualSales: Scalars['Float'];
  annualShopSales: Scalars['Float'];
  dailyAdCost: Scalars['JSON'];
  dailyAdRoi: Scalars['JSON'];
  dailyAdSales: Scalars['JSON'];
  dailyOverview: Scalars['JSON'];
  dailyShopSales: Scalars['JSON'];
  dealerChargeBetween: Scalars['JSON'];
  dealerChargeRank: Scalars['JSON'];
  dealerReceivable: Scalars['JSON'];
  dealerSalesBetween: Scalars['JSON'];
  dealerSalesRank: Scalars['JSON'];
  dealersCount: Scalars['Float'];
  monthCharge: Scalars['Float'];
  monthSales: Scalars['Float'];
  monthShopSales: Scalars['Float'];
  monthlyAdCost: Scalars['JSON'];
  monthlyAdSales: Scalars['JSON'];
  monthlyCharge: Scalars['JSON'];
  monthlyExpense: Scalars['JSON'];
  monthlyProductSales: Scalars['JSON'];
  monthlySales: Scalars['JSON'];
  monthlyShopSales: Scalars['JSON'];
  ordersCount: Scalars['Float'];
  quarterCharge: Scalars['Float'];
  quarterSales: Scalars['Float'];
  quarterShopSales: Scalars['Float'];
  salesChargeRankBetween: Scalars['JSON'];
  shopVariantSalesRank: Scalars['JSON'];
  totalBuyerCount: Scalars['Int'];
  totalCharge: Scalars['Float'];
  totalExpense: Scalars['Float'];
  totalReceivable: Scalars['Float'];
  totalSales: Scalars['Float'];
  totalShopSales: Scalars['Float'];
  variantSalesRank: Scalars['JSON'];
  weekCharge: Scalars['Float'];
  weekSales: Scalars['Float'];
  weekShopSales: Scalars['Float'];
  weeklyAdCost: Scalars['JSON'];
  weeklyAdSales: Scalars['JSON'];
  weeklyCharge: Scalars['JSON'];
  weeklySales: Scalars['JSON'];
  weeklyShopSales: Scalars['JSON'];
};


export type DashboardDailyAdRoiArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type DashboardDailyOverviewArgs = {
  date: Scalars['ISO8601DateTime'];
};


export type DashboardDealerChargeBetweenArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type DashboardDealerSalesBetweenArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type DashboardMonthlyProductSalesArgs = {
  productId: Scalars['ID'];
};


export type DashboardSalesChargeRankBetweenArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};

export type Dealer = {
  __typename?: 'Dealer';
  account?: Maybe<Account>;
  activeCode?: Maybe<Array<ActiveCode>>;
  activeCodeLabels?: Maybe<Scalars['String']>;
  address: Address;
  allowableArrears: Scalars['Boolean'];
  annualCharge: Scalars['Float'];
  annualExpense: Scalars['Float'];
  annualProfit: Scalars['Float'];
  annualSales: Scalars['Float'];
  averageBottleQuantity: Scalars['Int'];
  channel: Scalars['String'];
  charges: Array<Charge>;
  code: Scalars['String'];
  commissionRate?: Maybe<Scalars['String']>;
  createdAt: Scalars['ISO8601DateTime'];
  dealerType: Scalars['String'];
  expenseAccount?: Maybe<ExpenseAccount>;
  expenses: Array<Expense>;
  id: Scalars['ID'];
  inventoryItems?: Maybe<Array<InventoryItem>>;
  lastAnnualSales: Scalars['Float'];
  level: Scalars['Int'];
  marketScope?: Maybe<Scalars['String']>;
  monthlyBoxedCount: Scalars['JSON'];
  monthlyCharge: Scalars['JSON'];
  monthlyCommission: Scalars['JSON'];
  monthlyExpense: Scalars['JSON'];
  monthlyOrderCost: Scalars['JSON'];
  monthlySales: Scalars['JSON'];
  name: Scalars['String'];
  nickname?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  orderCount: Scalars['Int'];
  orders: Array<Order>;
  principal: Principal;
  shippingAddresses?: Maybe<Array<ShippingAddress>>;
  source?: Maybe<Scalars['String']>;
  terminals: Array<Terminal>;
  totalBottleCount: Scalars['Int'];
  totalCharge: Scalars['Float'];
  totalExpense: Scalars['Float'];
  totalProfit: Scalars['Float'];
  totalSales: Scalars['Float'];
  transfers: Array<Transfer>;
  user: User;
};

/** Autogenerated return type of DealerCreate */
export type DealerCreatePayload = {
  __typename?: 'DealerCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  dealer?: Maybe<Dealer>;
  errors?: Maybe<ValidationErrors>;
};

/** Specifies the input fields required to create or update a dealer. */
export type DealerInput = {
  /** The account associated with the dealer. */
  account?: InputMaybe<AccountInput>;
  /** The address associated with the dealer. */
  address?: InputMaybe<AddressInput>;
  allowableArrears?: InputMaybe<Scalars['Boolean']>;
  /** Required for creating a new dealer. */
  channel?: InputMaybe<Scalars['String']>;
  commissionRate?: InputMaybe<Scalars['Float']>;
  /** The type of dealer. */
  dealerType?: DealerType;
  /** Specifies the dealer to update or create a new dealer if absent. */
  id?: InputMaybe<Scalars['ID']>;
  /** Required for creating a new dealer. */
  level?: InputMaybe<Scalars['Int']>;
  /** Required for creating a new dealer. */
  marketScope?: InputMaybe<Scalars['String']>;
  /** Required for creating a new dealer. */
  name?: InputMaybe<Scalars['String']>;
  /** The nickname associated with the dealer. */
  nickname?: InputMaybe<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  /** The principal associated with the dealer. */
  principal?: InputMaybe<PrincipalInput>;
  source?: InputMaybe<Scalars['String']>;
  /** The user associated with the dealer. */
  userId?: InputMaybe<Scalars['Int']>;
};

export type DealerPage = {
  __typename?: 'DealerPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<Dealer>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

/** 经销商类型 */
export enum DealerType {
  /** 观云 */
  Guanyun = 'guanyun',
  /** 内部 */
  Internal = 'internal',
  /** 其他 */
  Other = 'other',
  /** 元气 */
  Yuanqi = 'yuanqi'
}

/** Autogenerated return type of DealerUpdate */
export type DealerUpdatePayload = {
  __typename?: 'DealerUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  dealer?: Maybe<Dealer>;
  errors?: Maybe<ValidationErrors>;
};

/** Represents direct upload credentials */
export type DirectUpload = {
  __typename?: 'DirectUpload';
  /** Created blob record ID */
  blobId: Scalars['ID'];
  /** HTTP request headers (JSON-encoded) */
  headers: Scalars['String'];
  /** Created blob key */
  key: Scalars['String'];
  /** Created blob record signed ID */
  signedBlobId: Scalars['ID'];
  /** Upload URL */
  url: Scalars['String'];
};

/** Autogenerated return type of DirectUploadCreate */
export type DirectUploadCreatePayload = {
  __typename?: 'DirectUploadCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  directUpload: DirectUpload;
};

/** File information required to prepare a direct upload */
export type DirectUploadInput = {
  /** File size (bytes) */
  byteSize: Scalars['Int'];
  /** MD5 file checksum as base64 */
  checksum: Scalars['String'];
  /** File content type */
  contentType: Scalars['String'];
  /** Original file name */
  filename: Scalars['String'];
};

export enum ExpensableEnum {
  Dealer = 'DEALER',
  Shop = 'SHOP'
}

/** Properties of Expense */
export type ExpensableType = Dealer | Shop;

export type Expense = {
  __typename?: 'Expense';
  amount: Scalars['Float'];
  attachments?: Maybe<Array<Scalars['String']>>;
  expensable: ExpensableType;
  expenseType: Scalars['String'];
  expensedAt: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  notes?: Maybe<Scalars['String']>;
  /** pendding, approved */
  state: Scalars['String'];
};

export type ExpenseAccount = {
  __typename?: 'ExpenseAccount';
  balance?: Maybe<Scalars['Float']>;
  id: Scalars['ID'];
  transfers?: Maybe<Array<Transfer>>;
};

/** Autogenerated return type of ExpenseCreate */
export type ExpenseCreatePayload = {
  __typename?: 'ExpenseCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  expense?: Maybe<Expense>;
};

/** Attributes for expense. */
export type ExpenseInput = {
  amount?: InputMaybe<Scalars['Float']>;
  /** Signed blob ID generated via `DirectUploadcreate` mutation */
  attachments?: InputMaybe<Array<Scalars['String']>>;
  /** dealer_id or shop_id */
  expensableId?: InputMaybe<Scalars['ID']>;
  /** Dealer or Shop */
  expensableType?: InputMaybe<Scalars['ID']>;
  expenseType?: InputMaybe<Scalars['String']>;
  expensedAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  notes?: InputMaybe<Scalars['String']>;
};

export type ExpensePage = {
  __typename?: 'ExpensePage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<Expense>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

export type FeishuUser = {
  __typename?: 'FeishuUser';
  id: Scalars['ID'];
  openId: Scalars['String'];
  userName?: Maybe<Scalars['String']>;
};

export type FreeOrder = {
  __typename?: 'FreeOrder';
  createdAt: Scalars['ISO8601DateTime'];
  feishuUser: FeishuUser;
  id: Scalars['ID'];
  instanceCode?: Maybe<Scalars['String']>;
  items: Array<FreeOrderItem>;
  notes?: Maybe<Scalars['String']>;
  orderType: Scalars['String'];
  purpose: Scalars['String'];
  shippingAddress: ShippingAddress;
  state: Scalars['String'];
  updatedAt: Scalars['ISO8601DateTime'];
};

export type FreeOrderItem = {
  __typename?: 'FreeOrderItem';
  id: Scalars['ID'];
  quantity: Scalars['Int'];
  variant: Variant;
};

export type FreeOrderPage = {
  __typename?: 'FreeOrderPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<FreeOrder>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

export type Hierarchy = {
  __typename?: 'Hierarchy';
  id: Scalars['ID'];
  parent: Variant;
  quantity: Scalars['Int'];
  variant: Variant;
};

/** Attributes for hierarchy. */
export type HierarchyInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  quantity?: InputMaybe<Scalars['Int']>;
  variantId?: InputMaybe<Scalars['ID']>;
};

export type InStore = {
  __typename?: 'InStore';
  id: Scalars['ID'];
  inStoreDate: Scalars['ISO8601DateTime'];
  inStoreItems: Array<InStoreItem>;
  inStoreType: InStoreType;
  notes?: Maybe<Scalars['String']>;
  outStoreId?: Maybe<Scalars['ID']>;
  /** pendding, completed */
  state: Scalars['String'];
  user: User;
};

/** Autogenerated input type of InStoreComplete */
export type InStoreCompleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of InStoreComplete */
export type InStoreCompletePayload = {
  __typename?: 'InStoreCompletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  inStore?: Maybe<InStore>;
};

/** Autogenerated return type of InStoreCreate */
export type InStoreCreatePayload = {
  __typename?: 'InStoreCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  inStore?: Maybe<InStore>;
};

export type InStoreInput = {
  id?: InputMaybe<Scalars['ID']>;
  inStoreDate?: InputMaybe<Scalars['ISO8601DateTime']>;
  inStoreItems?: InputMaybe<Array<InStoreItemInput>>;
  inStoreType?: InputMaybe<InStoreType>;
  notes?: InputMaybe<Scalars['String']>;
  outStoreId?: InputMaybe<Scalars['ID']>;
};

export type InStoreItem = {
  __typename?: 'InStoreItem';
  afterUnitCost?: Maybe<Scalars['Float']>;
  id: Scalars['ID'];
  notes?: Maybe<Scalars['String']>;
  preQuantity?: Maybe<Scalars['Int']>;
  preUnitCost?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
  unitCost?: Maybe<Scalars['Float']>;
  variant?: Maybe<Variant>;
};

export type InStoreItemInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  inStoreId?: InputMaybe<Scalars['ID']>;
  quantity?: InputMaybe<Scalars['Int']>;
  unitCost?: InputMaybe<Scalars['Float']>;
  variantId?: InputMaybe<Scalars['ID']>;
};

export type InStorePage = {
  __typename?: 'InStorePage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<InStore>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

/** 入库类型 */
export enum InStoreType {
  /** 生产入库 */
  Production = 'production',
  /** 退货入库 */
  Returns = 'returns',
  /** 原材料入库 */
  Sourcing = 'sourcing'
}

/** Autogenerated return type of InStoreUpdate */
export type InStoreUpdatePayload = {
  __typename?: 'InStoreUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  inStore?: Maybe<InStore>;
};

export enum InStoresOrder {
  Id = 'ID',
  Recent = 'RECENT'
}

/** Type of Inventory Cause */
export type InventoryCauseType = InStore | InventoryCheck | OutStore;

export type InventoryCheck = {
  __typename?: 'InventoryCheck';
  checkDate: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  inventoryCheckItems: Array<InventoryCheckItem>;
  notes?: Maybe<Scalars['String']>;
  /** pendding, completed */
  state: Scalars['String'];
  user: User;
};

/** Autogenerated input type of InventoryCheckComplete */
export type InventoryCheckCompleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of InventoryCheckComplete */
export type InventoryCheckCompletePayload = {
  __typename?: 'InventoryCheckCompletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  inventoryCheck?: Maybe<InventoryCheck>;
};

/** Autogenerated return type of InventoryCheckCreate */
export type InventoryCheckCreatePayload = {
  __typename?: 'InventoryCheckCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  inventoryCheck?: Maybe<InventoryCheck>;
};

/** Autogenerated input type of InventoryCheckDelete */
export type InventoryCheckDeleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of InventoryCheckDelete */
export type InventoryCheckDeletePayload = {
  __typename?: 'InventoryCheckDeletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  inventoryCheck?: Maybe<InventoryCheck>;
};

export type InventoryCheckInput = {
  checkDate?: InputMaybe<Scalars['ISO8601DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  inventoryCheckItems?: InputMaybe<Array<InventoryCheckItemInput>>;
  notes?: InputMaybe<Scalars['String']>;
};

export type InventoryCheckItem = {
  __typename?: 'InventoryCheckItem';
  beginningQuantity: Scalars['Int'];
  endingQuantity: Scalars['Int'];
  id: Scalars['ID'];
  notes?: Maybe<Scalars['String']>;
  variant: Variant;
};

export type InventoryCheckItemInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>;
  beginningQuantity?: InputMaybe<Scalars['Int']>;
  endingQuantity?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['ID']>;
  inventoryCheckId?: InputMaybe<Scalars['ID']>;
  notes?: InputMaybe<Scalars['String']>;
  variantId?: InputMaybe<Scalars['ID']>;
};

export type InventoryCheckPage = {
  __typename?: 'InventoryCheckPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<InventoryCheck>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

/** Autogenerated return type of InventoryCheckUpdate */
export type InventoryCheckUpdatePayload = {
  __typename?: 'InventoryCheckUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  inventoryCheck?: Maybe<InventoryCheck>;
};

export type InventoryItem = {
  __typename?: 'InventoryItem';
  createdAt: Scalars['ISO8601DateTime'];
  dealer?: Maybe<Dealer>;
  id: Scalars['ID'];
  quantity: Scalars['Int'];
  updatedAt: Scalars['ISO8601DateTime'];
  variant: Variant;
};

/** Autogenerated input type of InventoryItemUpdateQuantity */
export type InventoryItemUpdateQuantityInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  inventoryItemId: Scalars['ID'];
  quantity: Scalars['Int'];
};

/** Autogenerated return type of InventoryItemUpdateQuantity */
export type InventoryItemUpdateQuantityPayload = {
  __typename?: 'InventoryItemUpdateQuantityPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  inventoryItem?: Maybe<InventoryItem>;
};

export type InventoryLog = {
  __typename?: 'InventoryLog';
  adjustment?: Maybe<Scalars['Int']>;
  causedBy?: Maybe<InventoryCauseType>;
  causedById?: Maybe<Scalars['ID']>;
  causedByType?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']>;
  endingQuantity?: Maybe<Scalars['Int']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>;
};

export type InventoryLogPage = {
  __typename?: 'InventoryLogPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<InventoryLog>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

export type LineItem = {
  __typename?: 'LineItem';
  createdAt?: Maybe<Scalars['ISO8601DateTime']>;
  id: Scalars['ID'];
  order?: Maybe<Order>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
  rebateAmount?: Maybe<Scalars['Float']>;
  rebateRatio?: Maybe<Scalars['Float']>;
  totalCost?: Maybe<Scalars['Float']>;
  totalPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>;
  variant?: Maybe<Variant>;
};

/** Attributes for lineItem */
export type LineItemInput = {
  price?: InputMaybe<Scalars['Float']>;
  quantity: Scalars['Int'];
  variantId: Scalars['ID'];
};

export type LiveGmv = {
  __typename?: 'LiveGmv';
  channelList?: Maybe<Scalars['JSON']>;
  expenses?: Maybe<Scalars['JSON']>;
  feedsAmount: Scalars['Int'];
  id: Scalars['ID'];
  liveDate: Scalars['ISO8601Date'];
  locked: Scalars['Boolean'];
  refunds: Scalars['Int'];
};

export type LiveGmvInput = {
  /** 资金及广告投入 */
  expenses?: InputMaybe<Scalars['JSON']>;
  /** 信息流销售金额 */
  feedsAmount?: InputMaybe<Scalars['Int']>;
  id: Scalars['ID'];
  /** 锁定后，从抓取数据接口过来的请求将不导致更新 */
  locked?: InputMaybe<Scalars['Boolean']>;
  /** 退款金额 */
  refunds?: InputMaybe<Scalars['Int']>;
};

/** Autogenerated return type of LiveGmvUpdate */
export type LiveGmvUpdatePayload = {
  __typename?: 'LiveGmvUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  liveGmv?: Maybe<LiveGmv>;
};

export type LiveReport = {
  __typename?: 'LiveReport';
  conversion?: Maybe<Scalars['JSON']>;
  endTime: Scalars['Int'];
  id: Scalars['ID'];
  liveDate?: Maybe<Scalars['ISO8601Date']>;
  locked: Scalars['Boolean'];
  nickname: Scalars['String'];
  shortId: Scalars['String'];
  startTime: Scalars['Int'];
  trafficStructure?: Maybe<Scalars['JSON']>;
};

export type ManufactureItemInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  outStoreId?: InputMaybe<Scalars['ID']>;
  quantity?: InputMaybe<Scalars['Int']>;
  variantId?: InputMaybe<Scalars['ID']>;
};

export type ManyfactureItem = {
  __typename?: 'ManyfactureItem';
  id: Scalars['ID'];
  notes?: Maybe<Scalars['String']>;
  quantity: Scalars['Int'];
  variant: Variant;
};

export type MarketCode = {
  __typename?: 'MarketCode';
  applicationId: Scalars['String'];
  availableCode: Array<Array<Scalars['Int']>>;
  codeCount: Scalars['Int'];
  id: Scalars['ID'];
  isvApplicationId: Scalars['String'];
};

export type Mutation = {
  __typename?: 'Mutation';
  activityCreate?: Maybe<ActivityCreatePayload>;
  activityUpdate?: Maybe<ActivityUpdatePayload>;
  appCreate?: Maybe<AppCreatePayload>;
  appUpdate?: Maybe<AppUpdatePayload>;
  categoryCreate?: Maybe<CategoryCreatePayload>;
  categoryUpdate?: Maybe<CategoryUpdatePayload>;
  chargeCreate?: Maybe<ChargeCreatePayload>;
  dealerCreate?: Maybe<DealerCreatePayload>;
  dealerUpdate?: Maybe<DealerUpdatePayload>;
  directUploadCreate?: Maybe<DirectUploadCreatePayload>;
  expenseCreate?: Maybe<ExpenseCreatePayload>;
  inStoreComplete?: Maybe<InStoreCompletePayload>;
  inStoreCreate?: Maybe<InStoreCreatePayload>;
  inStoreUpdate?: Maybe<InStoreUpdatePayload>;
  inventoryCheckComplete?: Maybe<InventoryCheckCompletePayload>;
  inventoryCheckCreate?: Maybe<InventoryCheckCreatePayload>;
  inventoryCheckDelete?: Maybe<InventoryCheckDeletePayload>;
  inventoryCheckUpdate?: Maybe<InventoryCheckUpdatePayload>;
  inventoryItemUpdateQuantity?: Maybe<InventoryItemUpdateQuantityPayload>;
  liveGmvUpdate?: Maybe<LiveGmvUpdatePayload>;
  orderCancel?: Maybe<OrderCancelPayload>;
  orderComplete?: Maybe<OrderCompletePayload>;
  orderCreate?: Maybe<OrderCreatePayload>;
  orderNotify?: Maybe<OrderNotifyPayload>;
  orderReconcile?: Maybe<OrderReconcilePayload>;
  orderRefund?: Maybe<OrderRefundPayload>;
  outStoreComplete?: Maybe<OutStoreCompletePayload>;
  outStoreCreate?: Maybe<OutStoreCreatePayload>;
  outStoreUpdate?: Maybe<OutStoreUpdatePayload>;
  permissionCreate?: Maybe<PermissionCreatePayload>;
  permissionUpdate?: Maybe<PermissionUpdatePayload>;
  planCreate?: Maybe<PlanCreatePayload>;
  planUpdate?: Maybe<PlanUpdatePayload>;
  productCreate?: Maybe<ProductCreatePayload>;
  productUpdate?: Maybe<ProductUpdatePayload>;
  receiptCreate?: Maybe<ReceiptCreatePayload>;
  salesPlanComplete?: Maybe<SalesPlanCompletePayload>;
  salesPlanContinue?: Maybe<SalesPlanContinuePayload>;
  salesPlanSave?: Maybe<SalesPlanSavePayload>;
  shipmentImportShunfengBill?: Maybe<ShipmentImportShunfengBillPayload>;
  shipmentSyncRoutes?: Maybe<ShipmentSyncRoutesPayload>;
  shipmentUpdateCost?: Maybe<ShipmentUpdateCostPayload>;
  shippingAddressCreate?: Maybe<ShippingAddressCreatePayload>;
  shippingAddressSetDefault?: Maybe<ShippingAddressSetDefaultPayload>;
  shippingAddressUpdate?: Maybe<ShippingAddressUpdatePayload>;
  shopCreate?: Maybe<ShopCreatePayload>;
  shopUpdate?: Maybe<ShopUpdatePayload>;
  signIn?: Maybe<SignInPayload>;
  slRowApprove?: Maybe<SlRowApprovePayload>;
  slRowReject?: Maybe<SlRowRejectPayload>;
  terminalCreate?: Maybe<TerminalCreatePayload>;
  terminalDelete?: Maybe<TerminalDeletePayload>;
  terminalUpdate?: Maybe<TerminalUpdatePayload>;
  terminalVisitCreate?: Maybe<TerminalVisitCreatePayload>;
  terminalVisitDelete?: Maybe<TerminalVisitDeletePayload>;
  terminalVisitUpdate?: Maybe<TerminalVisitUpdatePayload>;
  userBatchCreate?: Maybe<UserBatchCreatePayload>;
  userChangePassword?: Maybe<UserChangePasswordPayload>;
  userCreate?: Maybe<UserCreatePayload>;
  userUpdate?: Maybe<UserUpdatePayload>;
  variantCreate?: Maybe<VariantCreatePayload>;
  variantSync?: Maybe<VariantSyncPayload>;
  variantUpdate?: Maybe<VariantUpdatePayload>;
  variantsBatchUpdate?: Maybe<VariantsBatchUpdatePayload>;
  variantsUpdate?: Maybe<VariantsUpdatePayload>;
  workOrderBlender?: Maybe<WorkOrderBlenderPayload>;
  workOrderCreate?: Maybe<WorkOrderCreatePayload>;
};


export type MutationActivityCreateArgs = {
  input: ActivityInput;
};


export type MutationActivityUpdateArgs = {
  input: ActivityInput;
};


export type MutationAppCreateArgs = {
  input: AppInput;
};


export type MutationAppUpdateArgs = {
  input: AppInput;
};


export type MutationCategoryCreateArgs = {
  input: CategoryInput;
};


export type MutationCategoryUpdateArgs = {
  input: CategoryInput;
};


export type MutationChargeCreateArgs = {
  input: ChargeInput;
};


export type MutationDealerCreateArgs = {
  input: DealerInput;
};


export type MutationDealerUpdateArgs = {
  input: DealerInput;
};


export type MutationDirectUploadCreateArgs = {
  input: DirectUploadInput;
};


export type MutationExpenseCreateArgs = {
  input: ExpenseInput;
};


export type MutationInStoreCompleteArgs = {
  input: InStoreCompleteInput;
};


export type MutationInStoreCreateArgs = {
  input: InStoreInput;
};


export type MutationInStoreUpdateArgs = {
  input: InStoreInput;
};


export type MutationInventoryCheckCompleteArgs = {
  input: InventoryCheckCompleteInput;
};


export type MutationInventoryCheckCreateArgs = {
  input: InventoryCheckInput;
};


export type MutationInventoryCheckDeleteArgs = {
  input: InventoryCheckDeleteInput;
};


export type MutationInventoryCheckUpdateArgs = {
  input: InventoryCheckInput;
};


export type MutationInventoryItemUpdateQuantityArgs = {
  input: InventoryItemUpdateQuantityInput;
};


export type MutationLiveGmvUpdateArgs = {
  input: LiveGmvInput;
};


export type MutationOrderCancelArgs = {
  input: OrderCancelInput;
};


export type MutationOrderCompleteArgs = {
  input: OrderCompleteInput;
};


export type MutationOrderCreateArgs = {
  input: OrderCreateInput;
};


export type MutationOrderNotifyArgs = {
  input: OrderNotifyInput;
};


export type MutationOrderReconcileArgs = {
  input: OrderReconcileInput;
};


export type MutationOrderRefundArgs = {
  input: OrderRefundInput;
};


export type MutationOutStoreCompleteArgs = {
  input: OutStoreCompleteInput;
};


export type MutationOutStoreCreateArgs = {
  input: OutStoreInput;
};


export type MutationOutStoreUpdateArgs = {
  input: OutStoreInput;
};


export type MutationPermissionCreateArgs = {
  input: PermissionInput;
};


export type MutationPermissionUpdateArgs = {
  input: PermissionInput;
};


export type MutationPlanCreateArgs = {
  input: PlanInput;
};


export type MutationPlanUpdateArgs = {
  input: PlanInput;
};


export type MutationProductCreateArgs = {
  input: ProductInput;
};


export type MutationProductUpdateArgs = {
  input: ProductInput;
};


export type MutationReceiptCreateArgs = {
  input: ReceiptInput;
};


export type MutationSalesPlanCompleteArgs = {
  input: SalesPlanCompleteInput;
};


export type MutationSalesPlanContinueArgs = {
  input: SalesPlanContinueInput;
};


export type MutationSalesPlanSaveArgs = {
  input: SalesPlanInput;
};


export type MutationShipmentImportShunfengBillArgs = {
  input: ShipmentImportShunfengBillInput;
};


export type MutationShipmentSyncRoutesArgs = {
  input: ShipmentSyncRoutesInput;
};


export type MutationShipmentUpdateCostArgs = {
  input: ShipmentUpdateCostInput;
};


export type MutationShippingAddressCreateArgs = {
  input: ShippingAddressInput;
};


export type MutationShippingAddressSetDefaultArgs = {
  input: ShippingAddressSetDefaultInput;
};


export type MutationShippingAddressUpdateArgs = {
  input: ShippingAddressInput;
};


export type MutationShopCreateArgs = {
  input: ShopInput;
};


export type MutationShopUpdateArgs = {
  input: ShopInput;
};


export type MutationSignInArgs = {
  input: SignInInput;
};


export type MutationSlRowApproveArgs = {
  input: SlRowApproveInput;
};


export type MutationSlRowRejectArgs = {
  input: SlRowRejectInput;
};


export type MutationTerminalCreateArgs = {
  input: TerminalInput;
};


export type MutationTerminalDeleteArgs = {
  input: TerminalDeleteInput;
};


export type MutationTerminalUpdateArgs = {
  input: TerminalInput;
};


export type MutationTerminalVisitCreateArgs = {
  input: TerminalVisitInput;
};


export type MutationTerminalVisitDeleteArgs = {
  input: TerminalVisitDeleteInput;
};


export type MutationTerminalVisitUpdateArgs = {
  input: TerminalVisitInput;
};


export type MutationUserBatchCreateArgs = {
  input: UserBatchInput;
};


export type MutationUserChangePasswordArgs = {
  input: UserChangePasswordInput;
};


export type MutationUserCreateArgs = {
  input: UserInput;
};


export type MutationUserUpdateArgs = {
  input: UserInput;
};


export type MutationVariantCreateArgs = {
  input: VariantInput;
};


export type MutationVariantSyncArgs = {
  input: VariantSyncInput;
};


export type MutationVariantUpdateArgs = {
  input: VariantInput;
};


export type MutationVariantsBatchUpdateArgs = {
  input: VariantsBatchUpdateInput;
};


export type MutationVariantsUpdateArgs = {
  input: VariantsUpdateInput;
};


export type MutationWorkOrderBlenderArgs = {
  input: WorkOrderBlenderInput;
};


export type MutationWorkOrderCreateArgs = {
  input: WorkOrderCreateInput;
};

export type OfflineReport = {
  __typename?: 'OfflineReport';
  orders: OrderPage;
  totalCost: Scalars['Float'];
  totalExpense: Scalars['Float'];
  totalProfit: Scalars['Float'];
  totalSales: Scalars['Float'];
  totalShipmentCost: Scalars['Float'];
  variantSales: Scalars['JSON'];
  variantTopSales: Scalars['JSON'];
  yuanqiTopSales: Scalars['JSON'];
};


export type OfflineReportOrdersArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};

export type OnlineReport = {
  __typename?: 'OnlineReport';
  adCost?: Maybe<Scalars['Float']>;
  areaSales?: Maybe<Scalars['JSON']>;
  orderCount?: Maybe<Scalars['Int']>;
  orders?: Maybe<ShopOrderPage>;
  shops?: Maybe<Scalars['JSON']>;
  totalCost: Scalars['Float'];
  totalExpense: Scalars['Float'];
  totalProfit: Scalars['Float'];
  totalSales: Scalars['Float'];
  totalShipmentCost: Scalars['Float'];
  variantSales: Scalars['JSON'];
  variantTopSales: Scalars['JSON'];
};


export type OnlineReportOrdersArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};

export type Order = {
  __typename?: 'Order';
  approvedAt?: Maybe<Scalars['ISO8601DateTime']>;
  bottleCount: Scalars['Int'];
  bottleQuantity: Scalars['Int'];
  cancelledAt?: Maybe<Scalars['ISO8601DateTime']>;
  charge?: Maybe<Charge>;
  commission: Scalars['Float'];
  commissionRate: Scalars['Float'];
  completedAt?: Maybe<Scalars['ISO8601DateTime']>;
  createdAt: Scalars['ISO8601DateTime'];
  dealer: Dealer;
  discountedAmount: Scalars['Float'];
  id: Scalars['ID'];
  lineItems: Array<LineItem>;
  notes?: Maybe<Scalars['String']>;
  rebateAmount?: Maybe<Scalars['Float']>;
  receiptList?: Maybe<Array<Receipt>>;
  reconciledAt?: Maybe<Scalars['ISO8601DateTime']>;
  reconciler?: Maybe<User>;
  rsaApprover: User;
  shipment?: Maybe<Shipment>;
  shippingAddress: ShippingAddress;
  state: Scalars['String'];
  totalCost: Scalars['Float'];
  totalPrice: Scalars['Float'];
  totalProfit: Scalars['Float'];
  updatedAt: Scalars['ISO8601DateTime'];
  user: User;
};

/** Autogenerated input type of OrderCancel */
export type OrderCancelInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of OrderCancel */
export type OrderCancelPayload = {
  __typename?: 'OrderCancelPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  order?: Maybe<Order>;
};

/** Autogenerated input type of OrderComplete */
export type OrderCompleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of OrderComplete */
export type OrderCompletePayload = {
  __typename?: 'OrderCompletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  order?: Maybe<Order>;
};

/** Autogenerated input type of OrderCreate */
export type OrderCreateInput = {
  /** The charge associated with the order. */
  chargeId?: InputMaybe<Scalars['Int']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** The dealer associated with the order. */
  dealerId: Scalars['Int'];
  discountedAmount?: InputMaybe<Scalars['Float']>;
  /** The line items associated with the order. */
  lineItems: Array<LineItemInput>;
  notes?: InputMaybe<Scalars['String']>;
  /** The RSA approver for this order. */
  rsaApproverId?: InputMaybe<Scalars['Int']>;
  /** The shipping address associated with the order. */
  shippingAddress: ShippingAddressInput;
};

/** Autogenerated return type of OrderCreate */
export type OrderCreatePayload = {
  __typename?: 'OrderCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  order?: Maybe<Order>;
};

/** Autogenerated input type of OrderNotify */
export type OrderNotifyInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of OrderNotify */
export type OrderNotifyPayload = {
  __typename?: 'OrderNotifyPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  order?: Maybe<Order>;
};

export type OrderPage = {
  __typename?: 'OrderPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<Order>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

/** Autogenerated input type of OrderReconcile */
export type OrderReconcileInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of OrderReconcile */
export type OrderReconcilePayload = {
  __typename?: 'OrderReconcilePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  order?: Maybe<Order>;
};

/** Autogenerated input type of OrderRefund */
export type OrderRefundInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of OrderRefund */
export type OrderRefundPayload = {
  __typename?: 'OrderRefundPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  order?: Maybe<Order>;
};

export type OutStore = {
  __typename?: 'OutStore';
  id: Scalars['ID'];
  inStore?: Maybe<InStore>;
  manufactureItems: Array<ManyfactureItem>;
  notes?: Maybe<Scalars['String']>;
  outStoreDate: Scalars['ISO8601DateTime'];
  outStoreItems: Array<OutStoreItem>;
  outStoreType: OutStoreType;
  /** pendding, completed */
  state: Scalars['String'];
  user: User;
};

/** Autogenerated input type of OutStoreComplete */
export type OutStoreCompleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of OutStoreComplete */
export type OutStoreCompletePayload = {
  __typename?: 'OutStoreCompletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  outStore?: Maybe<OutStore>;
};

/** Autogenerated return type of OutStoreCreate */
export type OutStoreCreatePayload = {
  __typename?: 'OutStoreCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  outStore?: Maybe<OutStore>;
};

export type OutStoreInput = {
  id?: InputMaybe<Scalars['ID']>;
  manufactureItems?: InputMaybe<Array<ManufactureItemInput>>;
  notes?: InputMaybe<Scalars['String']>;
  outStoreDate?: InputMaybe<Scalars['ISO8601DateTime']>;
  outStoreItems?: InputMaybe<Array<OutStoreItemInput>>;
  outStoreType?: InputMaybe<OutStoreType>;
};

export type OutStoreItem = {
  __typename?: 'OutStoreItem';
  id: Scalars['ID'];
  notes?: Maybe<Scalars['String']>;
  quantity: Scalars['Int'];
  variant: Variant;
};

export type OutStoreItemInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  outStoreId?: InputMaybe<Scalars['ID']>;
  quantity?: InputMaybe<Scalars['Int']>;
  variantId?: InputMaybe<Scalars['ID']>;
};

export type OutStorePage = {
  __typename?: 'OutStorePage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<OutStore>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

/** 出库类型 */
export enum OutStoreType {
  /** 回酒出库 */
  Defective = 'defective',
  /** 生产出库 */
  Production = 'production',
  /** 销售出库 */
  Sales = 'sales'
}

/** Autogenerated return type of OutStoreUpdate */
export type OutStoreUpdatePayload = {
  __typename?: 'OutStoreUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  outStore?: Maybe<OutStore>;
};

export enum OutStoresOrder {
  Id = 'ID',
  Recent = 'RECENT'
}

export type Permission = {
  __typename?: 'Permission';
  app?: Maybe<App>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']>;
  enabled?: Maybe<Scalars['Boolean']>;
  id: Scalars['ID'];
  masterId?: Maybe<Scalars['String']>;
  masterName?: Maybe<Scalars['String']>;
  masterType?: Maybe<Scalars['String']>;
  opcode?: Maybe<Scalars['Int']>;
};

/** Autogenerated return type of PermissionCreate */
export type PermissionCreatePayload = {
  __typename?: 'PermissionCreatePayload';
  app?: Maybe<App>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  permission?: Maybe<Permission>;
};

/** Attributes for permission. */
export type PermissionInput = {
  appId: Scalars['String'];
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  masterId: Scalars['String'];
  masterName?: InputMaybe<Scalars['String']>;
  masterType: Scalars['Int'];
};

/** Autogenerated return type of PermissionUpdate */
export type PermissionUpdatePayload = {
  __typename?: 'PermissionUpdatePayload';
  app?: Maybe<App>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  permission?: Maybe<Permission>;
};

export type Plan = {
  __typename?: 'Plan';
  closeAt?: Maybe<Scalars['ISO8601DateTime']>;
  endAt: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  planType?: Maybe<Scalars['String']>;
  salesPlans: Array<SalesPlan>;
  startAt: Scalars['ISO8601DateTime'];
};

/** Autogenerated return type of PlanCreate */
export type PlanCreatePayload = {
  __typename?: 'PlanCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  plan?: Maybe<Plan>;
};

/** Attributes for plan. */
export type PlanInput = {
  /** 计划填写截止日 */
  closeAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  endAt: Scalars['ISO8601DateTime'];
  id?: InputMaybe<Scalars['ID']>;
  /** plan name */
  name?: InputMaybe<Scalars['String']>;
  /** plan type */
  planType?: InputMaybe<Scalars['String']>;
  startAt: Scalars['ISO8601DateTime'];
  userId: Scalars['ID'];
};

/** Autogenerated return type of PlanUpdate */
export type PlanUpdatePayload = {
  __typename?: 'PlanUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  plan?: Maybe<Plan>;
};

export type Principal = {
  __typename?: 'Principal';
  age?: Maybe<Scalars['Int']>;
  birthday?: Maybe<Scalars['ISO8601Date']>;
  email?: Maybe<Scalars['String']>;
  hobby?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name: Scalars['String'];
  phone: Scalars['String'];
  wechat: Scalars['String'];
};

/** Attributes for principal */
export type PrincipalInput = {
  age?: InputMaybe<Scalars['Int']>;
  birthday?: InputMaybe<Scalars['ISO8601Date']>;
  email?: InputMaybe<Scalars['String']>;
  hobby?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  wechat?: InputMaybe<Scalars['String']>;
};

export type PrivateReport = {
  __typename?: 'PrivateReport';
  dailyCustomer: Scalars['JSON'];
  dailySales: Scalars['JSON'];
  monthlyCustomer: Scalars['JSON'];
  monthlySales: Scalars['JSON'];
  topCustomers: Scalars['JSON'];
  totalSales: Scalars['JSON'];
  weeklyCustomer: Scalars['JSON'];
  weeklySales: Scalars['JSON'];
};

export type Product = {
  __typename?: 'Product';
  category?: Maybe<Category>;
  createdAt: Scalars['ISO8601DateTime'];
  description?: Maybe<Scalars['String']>;
  enableSaleTax: Scalars['Boolean'];
  id: Scalars['ID'];
  imageUrl?: Maybe<Scalars['String']>;
  inventoryWarningVariants: Array<Variant>;
  leadTime?: Maybe<Scalars['Float']>;
  published: Scalars['Boolean'];
  title: Scalars['String'];
  updatedAt: Scalars['ISO8601DateTime'];
  variants: Array<Variant>;
};

/** Autogenerated return type of ProductCreate */
export type ProductCreatePayload = {
  __typename?: 'ProductCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  product?: Maybe<Product>;
};

/** Specifies the input fields required to create or update a product. */
export type ProductInput = {
  /** Specifies the product to update or create a new product if absent. */
  categoryId?: InputMaybe<Scalars['ID']>;
  description?: InputMaybe<Scalars['String']>;
  enableSaleTax?: InputMaybe<Scalars['Boolean']>;
  /** Specifies the product to update or create a new product if absent. */
  id?: InputMaybe<Scalars['ID']>;
  /** Image for product */
  imageUrl?: InputMaybe<Scalars['String']>;
  leadTime?: InputMaybe<Scalars['Float']>;
  published?: InputMaybe<Scalars['Boolean']>;
  /** Required for creating a new product. */
  title?: InputMaybe<Scalars['String']>;
  variants?: InputMaybe<Array<VariantInput>>;
};

/** Autogenerated return type of ProductUpdate */
export type ProductUpdatePayload = {
  __typename?: 'ProductUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  product?: Maybe<Product>;
};

export type Query = {
  __typename?: 'Query';
  /** Find ActiveCode */
  activeCode?: Maybe<Array<ActiveCode>>;
  /** Find all activities */
  activities?: Maybe<Array<Activity>>;
  /** Find a activity */
  activity?: Maybe<Activity>;
  /** Find all advertiser_reports */
  advertiserReports?: Maybe<AdvertiserReportPage>;
  /** Find all advertisers */
  advertisers?: Maybe<Array<Advertiser>>;
  /** Find all advertisers */
  agents?: Maybe<Array<Agent>>;
  /** Find all dealers */
  allDealers?: Maybe<Array<Dealer>>;
  /** find all departments */
  allDepartments?: Maybe<Scalars['JSON']>;
  /** Find all roles */
  allRoles?: Maybe<Array<Role>>;
  /** Find all variants */
  allVariants?: Maybe<Array<Variant>>;
  /** Find an app */
  app?: Maybe<App>;
  /** Find all apps with pagination */
  apps?: Maybe<AppPage>;
  /** Find all Audits */
  audits?: Maybe<AuditPage>;
  /** Get dealers that birthday coming in two weeks */
  birthdayUpcomingDealers?: Maybe<Array<Dealer>>;
  /** Find all categories */
  categories?: Maybe<Array<Category>>;
  /** Find a category */
  category?: Maybe<Category>;
  /** Find all Charges */
  charges?: Maybe<ChargePage>;
  /** Check variant cost price */
  costVerify?: Maybe<CostVerify>;
  /** Get information about current user */
  currentUser?: Maybe<User>;
  /** Dashboard queries */
  dashboard?: Maybe<Dashboard>;
  /** Find a dealer */
  dealer?: Maybe<Dealer>;
  /** Find all dealers with pagination */
  dealers?: Maybe<DealerPage>;
  /** check permission for feishu departments */
  departmentPermission?: Maybe<Scalars['Boolean']>;
  erpOutStoreItems?: Maybe<Scalars['JSON']>;
  /** Get all variants has erpcode */
  erpVariants?: Maybe<Array<Variant>>;
  /** check if erpcode exists */
  erpcodeExists?: Maybe<Scalars['Boolean']>;
  /** Find one expense */
  expense?: Maybe<Expense>;
  /** List expenses by page */
  expenses?: Maybe<ExpensePage>;
  /** Find all finished variants */
  finishedVariants?: Maybe<Array<Variant>>;
  /** Find all internal free orders */
  freeOrders?: Maybe<FreeOrderPage>;
  /** Find InStore */
  inStore?: Maybe<InStore>;
  /** Find all in_stores */
  inStores?: Maybe<InStorePage>;
  /** Find InventoryCheck */
  inventoryCheck?: Maybe<InventoryCheck>;
  /** Find all inventory_checks */
  inventoryChecks?: Maybe<InventoryCheckPage>;
  /** Get deficient variants */
  inventoryWarningVariants?: Maybe<Array<Variant>>;
  /** Find all variants without hierarchies */
  leafVariants?: Maybe<Array<Variant>>;
  /** Find all live gmv data */
  liveGmv?: Maybe<Array<LiveGmv>>;
  /** Find all live reports */
  liveReport?: Maybe<Array<LiveReport>>;
  /** Find MarketCode */
  marketCode?: Maybe<MarketCode>;
  /** Find all MarketCode */
  marketCodes?: Maybe<Array<MarketCode>>;
  /** Find all material variants */
  materialVariants?: Maybe<Array<Variant>>;
  /** Find offline report */
  offlineReport?: Maybe<OfflineReport>;
  /** Find online report */
  onlineReport?: Maybe<OnlineReport>;
  onlineSalesRegionDistribution?: Maybe<Scalars['JSON']>;
  /** Find order */
  order?: Maybe<Order>;
  /** Find all orders */
  orders?: Maybe<OrderPage>;
  /** Find OutStore */
  outStore?: Maybe<OutStore>;
  /** Find all out_stores */
  outStores?: Maybe<OutStorePage>;
  /** Find Plan */
  plan?: Maybe<Plan>;
  /** Find Plans */
  plans?: Maybe<Array<Plan>>;
  /** Find private report */
  privateReport?: Maybe<PrivateReport>;
  /** Find all private shops */
  privateShops?: Maybe<Array<Shop>>;
  /** Find a product */
  product?: Maybe<Product>;
  /** Find all products */
  products?: Maybe<Array<Product>>;
  /** Find all RawProducts */
  rawProducts?: Maybe<Array<RawProduct>>;
  /** Find Sales Plans */
  salesPlans?: Maybe<Array<SalesPlan>>;
  /** Find one salesman */
  salesman?: Maybe<Salesman>;
  /** find employees by name */
  searchEmployees?: Maybe<Scalars['JSON']>;
  /** Find shop */
  shop?: Maybe<Shop>;
  /** Find shop_order */
  shopOrder?: Maybe<ShopOrder>;
  /** sync shop_order from erp */
  shopOrderSync?: Maybe<Scalars['Boolean']>;
  /** Find all shop_orders */
  shopOrders?: Maybe<ShopOrderPage>;
  /** Find shop_user */
  shopUser?: Maybe<ShopUser>;
  /** Find all shop_users */
  shopUsers?: Maybe<ShopUserPage>;
  /** Find all shops */
  shops?: Maybe<Array<Shop>>;
  /** Find all Storages */
  storages?: Maybe<Array<Storage>>;
  /** Find all Tags */
  tags?: Maybe<TagPage>;
  /** Find a Terminal */
  terminal?: Maybe<Terminal>;
  /** Find a Terminal Visit */
  terminalVisit?: Maybe<TerminalVisit>;
  /** Find all Terminal Visits */
  terminalVisits?: Maybe<Array<TerminalVisit>>;
  /** Find all terminal */
  terminals?: Maybe<Array<Terminal>>;
  /** Find all variants exclude finished */
  unfinishedVariants?: Maybe<Array<Variant>>;
  /** check permission for a feishu user */
  userPermission?: Maybe<Scalars['Boolean']>;
  /** Find all users */
  users?: Maybe<Array<User>>;
  /** Find a variant */
  variant?: Maybe<Variant>;
  /** Find variants with pagination */
  variants?: Maybe<VariantPage>;
  /** find weather reports */
  weathers?: Maybe<Array<Weather>>;
  /** Find all WorkOrders */
  workOrders?: Maybe<Array<WorkOrder>>;
};


export type QueryActiveCodeArgs = {
  dealerId?: InputMaybe<Scalars['ID']>;
};


export type QueryActivityArgs = {
  id: Scalars['ID'];
};


export type QueryAdvertiserReportsArgs = {
  channel?: InputMaybe<AdvertiserReportChannel>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryAllDealersArgs = {
  dealerType?: InputMaybe<Scalars['String']>;
  ids?: InputMaybe<Array<Scalars['ID']>>;
};


export type QueryAppArgs = {
  id: Scalars['ID'];
};


export type QueryAppsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryAuditsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  staffOnly?: InputMaybe<Scalars['Boolean']>;
  variantId?: InputMaybe<Scalars['ID']>;
};


export type QueryCategoryArgs = {
  id: Scalars['ID'];
};


export type QueryChargesArgs = {
  dealerId?: InputMaybe<Scalars['ID']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryCostVerifyArgs = {
  categoryId: Scalars['ID'];
};


export type QueryDealerArgs = {
  id: Scalars['ID'];
};


export type QueryDealersArgs = {
  code?: InputMaybe<Scalars['String']>;
  dealerType?: InputMaybe<Scalars['String']>;
  ids?: InputMaybe<Array<Scalars['ID']>>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  q?: InputMaybe<Scalars['String']>;
};


export type QueryDepartmentPermissionArgs = {
  appUrl: Scalars['String'];
  departmentIds: Array<Scalars['ID']>;
};


export type QueryErpOutStoreItemsArgs = {
  outStoreDate: Scalars['ISO8601DateTime'];
};


export type QueryErpcodeExistsArgs = {
  erpcode: Scalars['String'];
};


export type QueryExpenseArgs = {
  id: Scalars['ID'];
};


export type QueryExpensesArgs = {
  expensable?: InputMaybe<ExpensableEnum>;
  expensableId?: InputMaybe<Scalars['ID']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryFreeOrdersArgs = {
  orderType?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryInStoreArgs = {
  id: Scalars['ID'];
};


export type QueryInStoresArgs = {
  dateRange?: InputMaybe<Array<Scalars['ISO8601DateTime']>>;
  manufacture?: InputMaybe<Scalars['Boolean']>;
  order?: InputMaybe<InStoresOrder>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<InStoreType>;
};


export type QueryInventoryCheckArgs = {
  id: Scalars['ID'];
};


export type QueryInventoryChecksArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryLiveGmvArgs = {
  endDate?: InputMaybe<Scalars['ISO8601Date']>;
  liveDate?: InputMaybe<Scalars['ISO8601Date']>;
  startDate?: InputMaybe<Scalars['ISO8601Date']>;
};


export type QueryLiveReportArgs = {
  endDate?: InputMaybe<Scalars['ISO8601Date']>;
  liveDate?: InputMaybe<Scalars['ISO8601Date']>;
  shortId?: InputMaybe<Scalars['ID']>;
  startDate?: InputMaybe<Scalars['ISO8601Date']>;
};


export type QueryMarketCodeArgs = {
  id: Scalars['ID'];
};


export type QueryOfflineReportArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type QueryOnlineReportArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type QueryOrderArgs = {
  id: Scalars['ID'];
};


export type QueryOrdersArgs = {
  dealerId?: InputMaybe<Scalars['ID']>;
  orderTime?: InputMaybe<Array<Scalars['ISO8601DateTime']>>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  q?: InputMaybe<Scalars['String']>;
  trackingNumbers?: InputMaybe<Array<Scalars['String']>>;
  type?: InputMaybe<Scalars['String']>;
};


export type QueryOutStoreArgs = {
  id: Scalars['ID'];
};


export type QueryOutStoresArgs = {
  dateRange?: InputMaybe<Array<Scalars['ISO8601DateTime']>>;
  order?: InputMaybe<OutStoresOrder>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<OutStoreType>;
};


export type QueryPlanArgs = {
  id: Scalars['ID'];
};


export type QueryPrivateReportArgs = {
  shopId?: InputMaybe<Scalars['ID']>;
};


export type QueryProductArgs = {
  id: Scalars['ID'];
};


export type QueryProductsArgs = {
  published?: InputMaybe<Scalars['Boolean']>;
  withCategory?: InputMaybe<Scalars['ID']>;
  withInventoryWarning?: InputMaybe<Scalars['Boolean']>;
};


export type QuerySalesPlansArgs = {
  at?: InputMaybe<Scalars['String']>;
  ids?: InputMaybe<Array<Scalars['ID']>>;
};


export type QuerySalesmanArgs = {
  feishuOpenId?: InputMaybe<Scalars['ID']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerySearchEmployeesArgs = {
  employeeName: Scalars['String'];
  feishuAccessToken: Scalars['String'];
};


export type QueryShopArgs = {
  id: Scalars['ID'];
};


export type QueryShopOrderArgs = {
  id: Scalars['ID'];
};


export type QueryShopOrdersArgs = {
  orderByOid?: InputMaybe<Scalars['String']>;
  orderTime?: InputMaybe<Array<Scalars['ISO8601DateTime']>>;
  page?: InputMaybe<Scalars['Int']>;
  payTime?: InputMaybe<Array<Scalars['ISO8601DateTime']>>;
  perPage?: InputMaybe<Scalars['Int']>;
  sendTime?: InputMaybe<Array<Scalars['ISO8601DateTime']>>;
  shopId?: InputMaybe<Scalars['ID']>;
  shopUserId?: InputMaybe<Scalars['ID']>;
  status?: InputMaybe<Scalars['String']>;
};


export type QueryShopUserArgs = {
  id: Scalars['ID'];
};


export type QueryShopUsersArgs = {
  order?: InputMaybe<ShopUsersOrder>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  phone?: InputMaybe<Scalars['String']>;
};


export type QueryShopsArgs = {
  first?: InputMaybe<Scalars['Int']>;
  ids?: InputMaybe<Array<Scalars['ID']>>;
};


export type QueryTagsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type QueryTerminalArgs = {
  id: Scalars['ID'];
};


export type QueryTerminalVisitArgs = {
  id: Scalars['ID'];
};


export type QueryUserPermissionArgs = {
  appUrl: Scalars['String'];
  userId: Scalars['String'];
};


export type QueryUsersArgs = {
  all?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  phone?: InputMaybe<Array<Scalars['String']>>;
  role?: InputMaybe<Scalars['String']>;
};


export type QueryVariantArgs = {
  id: Scalars['ID'];
};


export type QueryVariantsArgs = {
  byCategory?: InputMaybe<Scalars['ID']>;
  ids?: InputMaybe<Array<Scalars['ID']>>;
  overInventory?: InputMaybe<Scalars['Boolean']>;
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
  productIds?: InputMaybe<Array<Scalars['ID']>>;
  q?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Array<Scalars['String']>>;
};

export type RawProduct = {
  __typename?: 'RawProduct';
  degree: Scalars['Float'];
  id: Scalars['ID'];
  name: Scalars['String'];
  recipe: Scalars['JSON'];
  stock: Scalars['Float'];
};

export type Receipt = {
  __typename?: 'Receipt';
  allSigned: Scalars['Boolean'];
  attachments: Array<Scalars['String']>;
  id: Scalars['ID'];
  notes?: Maybe<Scalars['String']>;
  order: Order;
  receiptTime: Scalars['String'];
  state: Scalars['String'];
};

/** Autogenerated return type of ReceiptCreate */
export type ReceiptCreatePayload = {
  __typename?: 'ReceiptCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  order?: Maybe<Order>;
  receipt?: Maybe<Receipt>;
};

/** Attributes for receipt. */
export type ReceiptInput = {
  /** Signed blob ID generated via `DirectUploadcreate` mutation */
  attachments: Array<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  orderId: Scalars['String'];
  receiptTime: Scalars['ISO8601DateTime'];
  state: Scalars['String'];
};

export type Role = {
  __typename?: 'Role';
  id: Scalars['ID'];
  name: Scalars['String'];
  users?: Maybe<Array<User>>;
};

export type SalesPlan = {
  __typename?: 'SalesPlan';
  id: Scalars['ID'];
  items: Scalars['JSON'];
  planType?: Maybe<Scalars['String']>;
  state: Scalars['String'];
};

/** Autogenerated input type of SalesPlanComplete */
export type SalesPlanCompleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  salesPlanId: Scalars['ID'];
};

/** Autogenerated return type of SalesPlanComplete */
export type SalesPlanCompletePayload = {
  __typename?: 'SalesPlanCompletePayload';
  SalesPlan?: Maybe<SalesPlan>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

/** Autogenerated input type of SalesPlanContinue */
export type SalesPlanContinueInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  salesPlanId: Scalars['ID'];
};

/** Autogenerated return type of SalesPlanContinue */
export type SalesPlanContinuePayload = {
  __typename?: 'SalesPlanContinuePayload';
  SalesPlan?: Maybe<SalesPlan>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

/** Attributes for sales plan. */
export type SalesPlanInput = {
  id?: InputMaybe<Scalars['ID']>;
  /** Required variants and quantities */
  items?: InputMaybe<Scalars['JSON']>;
  /** parent plan id */
  planId?: InputMaybe<Scalars['ID']>;
  /** Sales plan type, e.g. 'online' or 'offline' */
  planType?: InputMaybe<Scalars['String']>;
  /** pendding, completed */
  state?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of SalesPlanSave */
export type SalesPlanSavePayload = {
  __typename?: 'SalesPlanSavePayload';
  SalesPlan?: Maybe<SalesPlan>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

export type Salesman = {
  __typename?: 'Salesman';
  feishuUser: FeishuUser;
  id: Scalars['ID'];
  name: Scalars['String'];
  terminalVisits: Array<TerminalVisit>;
  terminals?: Maybe<Array<Terminal>>;
};


export type SalesmanTerminalVisitsArgs = {
  endTime?: InputMaybe<Scalars['ISO8601DateTime']>;
  startTime?: InputMaybe<Scalars['ISO8601DateTime']>;
};

export type Shipment = {
  __typename?: 'Shipment';
  cost?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']>;
  id: Scalars['ID'];
  provider?: Maybe<Scalars['String']>;
  providerName?: Maybe<Scalars['String']>;
  routes?: Maybe<Scalars['JSON']>;
  trackingNumber?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of ShipmentImportShunfengBill */
export type ShipmentImportShunfengBillInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Shunfeng billing file */
  file: Scalars['Upload'];
};

/** Autogenerated return type of ShipmentImportShunfengBill */
export type ShipmentImportShunfengBillPayload = {
  __typename?: 'ShipmentImportShunfengBillPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  total: Scalars['Float'];
};

/** Autogenerated input type of ShipmentSyncRoutes */
export type ShipmentSyncRoutesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Shipment id */
  id?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of ShipmentSyncRoutes */
export type ShipmentSyncRoutesPayload = {
  __typename?: 'ShipmentSyncRoutesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  shipment?: Maybe<Shipment>;
};

/** Autogenerated input type of ShipmentUpdateCost */
export type ShipmentUpdateCostInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  /** Shipment cost */
  cost: Scalars['Float'];
  /** Shipment id */
  id: Scalars['String'];
};

/** Autogenerated return type of ShipmentUpdateCost */
export type ShipmentUpdateCostPayload = {
  __typename?: 'ShipmentUpdateCostPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  shipment?: Maybe<Shipment>;
};

export type ShippingAddress = {
  __typename?: 'ShippingAddress';
  city: Scalars['String'];
  detail: Scalars['String'];
  district: Scalars['String'];
  id: Scalars['ID'];
  isDefault: Scalars['Boolean'];
  name: Scalars['String'];
  phone: Scalars['String'];
  province: Scalars['String'];
};

/** Autogenerated return type of ShippingAddressCreate */
export type ShippingAddressCreatePayload = {
  __typename?: 'ShippingAddressCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  shippingAddress?: Maybe<ShippingAddress>;
};

/** Attributes for shipping address */
export type ShippingAddressInput = {
  city?: InputMaybe<Scalars['String']>;
  dealerId?: InputMaybe<Scalars['ID']>;
  detail?: InputMaybe<Scalars['String']>;
  district?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  province?: InputMaybe<Scalars['String']>;
};

/** Autogenerated input type of ShippingAddressSetDefault */
export type ShippingAddressSetDefaultInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  dealerId?: InputMaybe<Scalars['ID']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of ShippingAddressSetDefault */
export type ShippingAddressSetDefaultPayload = {
  __typename?: 'ShippingAddressSetDefaultPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  shippingAddress?: Maybe<ShippingAddress>;
};

/** Autogenerated return type of ShippingAddressUpdate */
export type ShippingAddressUpdatePayload = {
  __typename?: 'ShippingAddressUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  shippingAddress?: Maybe<ShippingAddress>;
};

export type Shop = {
  __typename?: 'Shop';
  dailyAdExpense?: Maybe<Scalars['JSON']>;
  dailyAdRoi?: Maybe<Scalars['JSON']>;
  dailySales?: Maybe<Scalars['JSON']>;
  expenses?: Maybe<Array<Expense>>;
  gmv?: Maybe<Scalars['JSON']>;
  id?: Maybe<Scalars['ID']>;
  monthlySales?: Maybe<Scalars['JSON']>;
  name?: Maybe<Scalars['String']>;
  orders?: Maybe<Array<ShopOrder>>;
  shopType?: Maybe<ShopType>;
  totalExpenses?: Maybe<Scalars['Float']>;
  totalSales?: Maybe<Scalars['Float']>;
  weeklySales?: Maybe<Scalars['JSON']>;
};


export type ShopDailyAdRoiArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type ShopGmvArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};

/** Autogenerated return type of ShopCreate */
export type ShopCreatePayload = {
  __typename?: 'ShopCreatePayload';
  category?: Maybe<Shop>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

export type ShopInput = {
  id: Scalars['ID'];
  /** Required for creating a new shop. */
  name?: InputMaybe<Scalars['String']>;
  /** Required for creating a new shop. */
  shopType?: InputMaybe<ShopType>;
};

export type ShopLineItem = {
  __typename?: 'ShopLineItem';
  amount: Scalars['Float'];
  id: Scalars['ID'];
  isGift?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  price: Scalars['Float'];
  qty: Scalars['Int'];
  skuId: Scalars['String'];
};

export type ShopOrder = {
  __typename?: 'ShopOrder';
  agent?: Maybe<Agent>;
  freeAmount?: Maybe<Scalars['Float']>;
  freight?: Maybe<Scalars['Float']>;
  id: Scalars['ID'];
  lId?: Maybe<Scalars['String']>;
  lineItems?: Maybe<Array<ShopLineItem>>;
  logisticsCompany?: Maybe<Scalars['String']>;
  oId?: Maybe<Scalars['Int']>;
  orderDate?: Maybe<Scalars['ISO8601DateTime']>;
  paidAmount?: Maybe<Scalars['Float']>;
  payAmount?: Maybe<Scalars['Float']>;
  payDate?: Maybe<Scalars['ISO8601DateTime']>;
  receiverAddress?: Maybe<Scalars['String']>;
  receiverCity?: Maybe<Scalars['String']>;
  receiverDistrict?: Maybe<Scalars['String']>;
  receiverMobile?: Maybe<Scalars['String']>;
  receiverName?: Maybe<Scalars['String']>;
  receiverState?: Maybe<Scalars['String']>;
  sendDate?: Maybe<Scalars['ISO8601DateTime']>;
  shop?: Maybe<Shop>;
  shopBuyerId?: Maybe<Scalars['String']>;
  shopName?: Maybe<Scalars['String']>;
  shopUser?: Maybe<ShopUser>;
  soId?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  totalCost?: Maybe<Scalars['Float']>;
  totalProfit?: Maybe<Scalars['Float']>;
};

export type ShopOrderPage = {
  __typename?: 'ShopOrderPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<ShopOrder>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

/** 店铺类型 */
export enum ShopType {
  /** 代销 */
  Agency = 'agency',
  /** 直营 */
  Directly = 'directly'
}

/** Autogenerated return type of ShopUpdate */
export type ShopUpdatePayload = {
  __typename?: 'ShopUpdatePayload';
  category?: Maybe<Shop>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
};

export type ShopUser = {
  __typename?: 'ShopUser';
  city?: Maybe<Scalars['String']>;
  detail: Scalars['String'];
  district?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  lastOrderDate?: Maybe<Scalars['ISO8601DateTime']>;
  name: Scalars['String'];
  orders?: Maybe<Array<ShopOrder>>;
  ordersCount: Scalars['Int'];
  phone: Scalars['String'];
  province?: Maybe<Scalars['String']>;
  totalAmount: Scalars['Float'];
};

export type ShopUserPage = {
  __typename?: 'ShopUserPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<ShopUser>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

export enum ShopUsersOrder {
  OrdersCount = 'ORDERS_COUNT',
  Recent = 'RECENT',
  TotalAmount = 'TOTAL_AMOUNT'
}

/** Autogenerated input type of SignIn */
export type SignInInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  password: Scalars['String'];
  phone: Scalars['String'];
};

/** Autogenerated return type of SignIn */
export type SignInPayload = {
  __typename?: 'SignInPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<Array<Scalars['String']>>;
  token?: Maybe<Scalars['String']>;
  user?: Maybe<User>;
};

export type SlColumn = {
  __typename?: 'SlColumn';
  createdAt: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  label?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  options: Scalars['JSON'];
  placeholder?: Maybe<Scalars['String']>;
  position: Scalars['Int'];
  privateType: SlColumnPrivateType;
  publicType: Scalars['String'];
  rules: Scalars['JSON'];
  updatedAt: Scalars['ISO8601DateTime'];
};

export type SlColumnInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  options?: InputMaybe<Scalars['JSON']>;
  placeholder?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['Int']>;
  privateType?: InputMaybe<SlColumnPrivateType>;
  publicType?: InputMaybe<Scalars['String']>;
  rules?: InputMaybe<Scalars['JSON']>;
};

export enum SlColumnPrivateType {
  Boolean = 'boolean',
  Date = 'date',
  Daterange = 'daterange',
  Datetime = 'datetime',
  Decimal = 'decimal',
  Float = 'float',
  Inet = 'inet',
  Int4range = 'int4range',
  Int8range = 'int8range',
  Integer = 'integer',
  Json = 'json',
  Jsonb = 'jsonb',
  Money = 'money',
  Numrange = 'numrange',
  Point = 'point',
  String = 'string',
  StringArray = 'string_array',
  Text = 'text',
  Time = 'time',
  Tsrange = 'tsrange',
  Tstzrange = 'tstzrange',
  Uuid = 'uuid'
}

export type SlRow = {
  __typename?: 'SlRow';
  createdAt: Scalars['ISO8601DateTime'];
  data: Scalars['JSON'];
  id: Scalars['ID'];
  /** pendding, approved, rejected */
  state: Scalars['String'];
  updatedAt: Scalars['ISO8601DateTime'];
  wechatUser?: Maybe<WechatUser>;
};

/** Autogenerated input type of SlRowApprove */
export type SlRowApproveInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  slRowId: Scalars['ID'];
};

/** Autogenerated return type of SlRowApprove */
export type SlRowApprovePayload = {
  __typename?: 'SlRowApprovePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  slRow?: Maybe<SlRow>;
};

/** Autogenerated input type of SlRowReject */
export type SlRowRejectInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  slRowId: Scalars['ID'];
};

/** Autogenerated return type of SlRowReject */
export type SlRowRejectPayload = {
  __typename?: 'SlRowRejectPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  slRow?: Maybe<SlRow>;
};

export type SlTable = {
  __typename?: 'SlTable';
  createdAt: Scalars['ISO8601DateTime'];
  desc: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  slColumns?: Maybe<Array<SlColumn>>;
  slRows?: Maybe<Array<SlRow>>;
  updatedAt: Scalars['ISO8601DateTime'];
};

export type SlTableInput = {
  activityId?: InputMaybe<Scalars['ID']>;
  desc?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  slColumns?: InputMaybe<Array<SlColumnInput>>;
};

export type Storage = {
  __typename?: 'Storage';
  degree: Scalars['Float'];
  id: Scalars['ID'];
  name: Scalars['String'];
  price: Scalars['Float'];
  stock: Scalars['Float'];
  volume: Scalars['Float'];
};

export type Tag = {
  __typename?: 'Tag';
  id: Scalars['ID'];
  name: Scalars['String'];
  taggingsCount: Scalars['Int'];
};

export type TagPage = {
  __typename?: 'TagPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<Tag>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

export type Terminal = {
  __typename?: 'Terminal';
  address?: Maybe<Address>;
  competitorInfo?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  dealer?: Maybe<Dealer>;
  fullAddress?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  level: Scalars['String'];
  name: Scalars['String'];
  phone?: Maybe<Scalars['String']>;
  terminalType: Scalars['String'];
};

/** Autogenerated return type of TerminalCreate */
export type TerminalCreatePayload = {
  __typename?: 'TerminalCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  terminal?: Maybe<Terminal>;
};

/** Autogenerated input type of TerminalDelete */
export type TerminalDeleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of TerminalDelete */
export type TerminalDeletePayload = {
  __typename?: 'TerminalDeletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  terminal?: Maybe<Terminal>;
};

/** 门店输入信息 */
export type TerminalInput = {
  /** 门店地址 */
  address?: InputMaybe<AddressInput>;
  /** 竞品信息 */
  competitorInfo?: InputMaybe<Scalars['String']>;
  /** 联系人 */
  contact?: InputMaybe<Scalars['String']>;
  /** 经销商ID */
  dealerId?: InputMaybe<Scalars['ID']>;
  id?: InputMaybe<Scalars['ID']>;
  /** 门店分级 */
  level: Scalars['String'];
  /** 门店名称 */
  name: Scalars['String'];
  /** 电话 */
  phone?: InputMaybe<Scalars['String']>;
  /** 销售ID */
  salesmanId?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of TerminalUpdate */
export type TerminalUpdatePayload = {
  __typename?: 'TerminalUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  terminal?: Maybe<Terminal>;
};

export type TerminalVisit = {
  __typename?: 'TerminalVisit';
  createdAt: Scalars['ISO8601DateTime'];
  displayPhoto: Scalars['String'];
  doorwayPhoto: Scalars['String'];
  id: Scalars['ID'];
  orderInfo?: Maybe<Scalars['String']>;
  orderPhoto?: Maybe<Scalars['String']>;
  salesman: Salesman;
  terminal: Terminal;
  updatedAt: Scalars['ISO8601DateTime'];
  visitInfo: Scalars['String'];
};

/** Autogenerated return type of TerminalVisitCreate */
export type TerminalVisitCreatePayload = {
  __typename?: 'TerminalVisitCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  salesman?: Maybe<Salesman>;
  terminalVisit?: Maybe<TerminalVisit>;
};

/** Autogenerated input type of TerminalVisitDelete */
export type TerminalVisitDeleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

/** Autogenerated return type of TerminalVisitDelete */
export type TerminalVisitDeletePayload = {
  __typename?: 'TerminalVisitDeletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  terminalVisit?: Maybe<TerminalVisit>;
};

export type TerminalVisitInput = {
  createdAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  displayPhoto: Scalars['String'];
  doorwayPhoto: Scalars['String'];
  id?: InputMaybe<Scalars['ID']>;
  orderInfo?: InputMaybe<Scalars['String']>;
  orderPhoto?: InputMaybe<Scalars['String']>;
  salesmanId: Scalars['ID'];
  terminalId: Scalars['ID'];
  visitInfo: Scalars['String'];
};

/** Autogenerated return type of TerminalVisitUpdate */
export type TerminalVisitUpdatePayload = {
  __typename?: 'TerminalVisitUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  terminalVisit?: Maybe<TerminalVisit>;
};

/** 时间粒度 */
export enum TimeGranularity {
  /** 表示天 */
  StatTimeGranularityDaily = 'STAT_TIME_GRANULARITY_DAILY',
  /** 表示小时 */
  StatTimeGranularityHourly = 'STAT_TIME_GRANULARITY_HOURLY'
}

export type Transfer = {
  __typename?: 'Transfer';
  amount?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']>;
  id: Scalars['ID'];
  metadata?: Maybe<Scalars['JSON']>;
  transferType?: Maybe<Scalars['String']>;
  transferableId?: Maybe<Scalars['ID']>;
  transferableType?: Maybe<Scalars['String']>;
};

export type User = {
  __typename?: 'User';
  createdAt: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  locked: Scalars['Boolean'];
  name: Scalars['String'];
  phone: Scalars['String'];
  roles?: Maybe<Array<Scalars['String']>>;
  token?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UserBatchCreate */
export type UserBatchCreatePayload = {
  __typename?: 'UserBatchCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  createdUsers: Array<User>;
  errors?: Maybe<ValidationErrors>;
};

/** Inputs to batch create users. */
export type UserBatchInput = {
  /** User list */
  users: Array<UserInput>;
};

/** Autogenerated input type of UserChangePassword */
export type UserChangePasswordInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  password: Scalars['String'];
};

/** Autogenerated return type of UserChangePassword */
export type UserChangePasswordPayload = {
  __typename?: 'UserChangePasswordPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  user?: Maybe<User>;
};

/** Autogenerated return type of UserCreate */
export type UserCreatePayload = {
  __typename?: 'UserCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  user?: Maybe<User>;
};

/** Specifies the input fields required to create or update a user. */
export type UserInput = {
  /** Specifies the user to update or create a new user if absent. */
  id?: InputMaybe<Scalars['ID']>;
  /** set true to block user */
  locked?: InputMaybe<Scalars['Boolean']>;
  /** Required for creating a new product. */
  name?: InputMaybe<Scalars['String']>;
  /** Required for creating a new user. */
  password?: InputMaybe<Scalars['String']>;
  /** Required for creating a new user. */
  phone?: InputMaybe<Scalars['String']>;
  /** admin,opration,sales */
  roles?: InputMaybe<Array<Scalars['String']>>;
};

/** Autogenerated return type of UserUpdate */
export type UserUpdatePayload = {
  __typename?: 'UserUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  user?: Maybe<User>;
};

export type ValidationErrors = {
  __typename?: 'ValidationErrors';
  details: Scalars['String'];
  fullMessages: Array<Scalars['String']>;
};

export type Variant = {
  __typename?: 'Variant';
  barcode?: Maybe<Scalars['String']>;
  bottleCount?: Maybe<Scalars['Int']>;
  bottleQuantity: Scalars['Int'];
  checkInventory: Scalars['Int'];
  closingInventory: Scalars['Int'];
  compareAtPrice: Scalars['Float'];
  cost?: Maybe<Scalars['Float']>;
  costPrice?: Maybe<Scalars['Float']>;
  createdAt: Scalars['ISO8601DateTime'];
  displayTitle: Scalars['String'];
  erpcode?: Maybe<Scalars['String']>;
  finished: Scalars['Boolean'];
  hierarchies?: Maybe<Array<Hierarchy>>;
  id: Scalars['ID'];
  imageUrl?: Maybe<Scalars['String']>;
  instoreInventory: Scalars['Int'];
  inventoryLogs?: Maybe<InventoryLogPage>;
  inventoryLogsCount: Scalars['Int'];
  inventoryQuantity: Scalars['Int'];
  isJt?: Maybe<Scalars['Boolean']>;
  leadTime?: Maybe<Scalars['Float']>;
  leaf?: Maybe<Scalars['Boolean']>;
  logData?: Maybe<Scalars['JSON']>;
  minInventoryQuantity: Scalars['Int'];
  openingInventory: Scalars['Int'];
  originCostPrice?: Maybe<Scalars['Float']>;
  outstoreInventory: Scalars['Int'];
  parents?: Maybe<Array<Variant>>;
  position: Scalars['Int'];
  price: Scalars['Float'];
  productCategoryId: Scalars['ID'];
  productId: Scalars['ID'];
  productionCount?: Maybe<Scalars['Int']>;
  rebateRevisions?: Maybe<Scalars['JSON']>;
  revisionAt?: Maybe<Variant>;
  saleTax: Scalars['Float'];
  salesCount?: Maybe<Scalars['Int']>;
  tagList?: Maybe<Array<Scalars['String']>>;
  title: Scalars['String'];
  totalVolume?: Maybe<Scalars['Int']>;
  updatedAt: Scalars['ISO8601DateTime'];
  weight?: Maybe<Scalars['Float']>;
};


export type VariantCheckInventoryArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type VariantClosingInventoryArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type VariantInstoreInventoryArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type VariantInventoryLogsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  perPage?: InputMaybe<Scalars['Int']>;
};


export type VariantOpeningInventoryArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type VariantOutstoreInventoryArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type VariantProductionCountArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};


export type VariantRevisionAtArgs = {
  at: Scalars['ISO8601DateTime'];
};


export type VariantSalesCountArgs = {
  endTime: Scalars['ISO8601DateTime'];
  startTime: Scalars['ISO8601DateTime'];
};

/** Autogenerated return type of VariantCreate */
export type VariantCreatePayload = {
  __typename?: 'VariantCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  variant?: Maybe<Variant>;
};

/** Attributes for variant. */
export type VariantInput = {
  barcode?: InputMaybe<Scalars['String']>;
  bottleCount?: InputMaybe<Scalars['Int']>;
  compareAtPrice?: InputMaybe<Scalars['Float']>;
  cost?: InputMaybe<Scalars['Float']>;
  costPrice?: InputMaybe<Scalars['Float']>;
  erpcode?: InputMaybe<Scalars['String']>;
  hierarchies?: InputMaybe<Array<HierarchyInput>>;
  id?: InputMaybe<Scalars['ID']>;
  imageUrl?: InputMaybe<Scalars['String']>;
  inventoryQuantity?: InputMaybe<Scalars['Int']>;
  leadTime?: InputMaybe<Scalars['Float']>;
  minInventoryQuantity?: InputMaybe<Scalars['Int']>;
  originCostPrice?: InputMaybe<Scalars['Float']>;
  position?: InputMaybe<Scalars['Int']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['ID']>;
  rebateRevisions?: InputMaybe<Scalars['JSON']>;
  tagList?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  totalVolume?: InputMaybe<Scalars['Int']>;
  weight?: InputMaybe<Scalars['Float']>;
};

export type VariantPage = {
  __typename?: 'VariantPage';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  nodes: Array<Variant>;
  nodesCount: Scalars['Int'];
  pagesCount: Scalars['Int'];
};

/** Autogenerated input type of VariantSync */
export type VariantSyncInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id: Scalars['ID'];
};

/** Autogenerated return type of VariantSync */
export type VariantSyncPayload = {
  __typename?: 'VariantSyncPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  variant?: Maybe<Variant>;
};

/** Autogenerated return type of VariantUpdate */
export type VariantUpdatePayload = {
  __typename?: 'VariantUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  variant?: Maybe<Variant>;
};

/** Attributes for batch update variants. */
export type VariantsBatchUpdateInput = {
  items: Array<VariantInput>;
};

/** Autogenerated return type of VariantsBatchUpdate */
export type VariantsBatchUpdatePayload = {
  __typename?: 'VariantsBatchUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  updated?: Maybe<Array<Variant>>;
};

/** Attributes for update variants. */
export type VariantsUpdateInput = {
  compareAtPrice?: InputMaybe<Scalars['Float']>;
  leadTime?: InputMaybe<Scalars['Float']>;
  minInventoryQuantity?: InputMaybe<Scalars['Int']>;
  price?: InputMaybe<Scalars['Float']>;
  tags: Array<Scalars['String']>;
  weight?: InputMaybe<Scalars['Float']>;
};

/** Autogenerated return type of VariantsUpdate */
export type VariantsUpdatePayload = {
  __typename?: 'VariantsUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  updated?: Maybe<Scalars['Int']>;
};

export type Weather = {
  __typename?: 'Weather';
  date?: Maybe<Scalars['String']>;
  humidity?: Maybe<Scalars['Int']>;
  id: Scalars['ID'];
  location: Scalars['String'];
  recordAt?: Maybe<Scalars['ISO8601DateTime']>;
  tempMax?: Maybe<Scalars['Int']>;
  tempMin?: Maybe<Scalars['Int']>;
  temperature?: Maybe<Scalars['Int']>;
  uvText?: Maybe<Scalars['String']>;
  weatherText?: Maybe<Scalars['String']>;
};

export type WechatUser = {
  __typename?: 'WechatUser';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  createdAt: Scalars['ISO8601DateTime'];
  headimgurl: Scalars['String'];
  id: Scalars['ID'];
  nickname: Scalars['String'];
  openid: Scalars['String'];
  province?: Maybe<Scalars['String']>;
  sex: Scalars['String'];
  subscribe: Scalars['Boolean'];
  subscribeTime?: Maybe<Scalars['ISO8601DateTime']>;
};

export type WorkOrder = {
  __typename?: 'WorkOrder';
  createdAt: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  rawProduct: RawProduct;
  recipe?: Maybe<Scalars['JSON']>;
  weight?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of WorkOrderBlender */
export type WorkOrderBlenderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  rawProductId: Scalars['ID'];
  weight: Scalars['Float'];
};

/** Autogenerated return type of WorkOrderBlender */
export type WorkOrderBlenderPayload = {
  __typename?: 'WorkOrderBlenderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  rawProduct?: Maybe<RawProduct>;
  result?: Maybe<Scalars['JSON']>;
  weight?: Maybe<Scalars['Float']>;
};

/** Autogenerated input type of WorkOrderCreate */
export type WorkOrderCreateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  rawProductId: Scalars['ID'];
  weight: Scalars['Float'];
};

/** Autogenerated return type of WorkOrderCreate */
export type WorkOrderCreatePayload = {
  __typename?: 'WorkOrderCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errors?: Maybe<ValidationErrors>;
  workOrder?: Maybe<WorkOrder>;
};

export type DashboardQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type DashboardQueryQuery = { __typename?: 'Query', dashboard?: { __typename?: 'Dashboard', dealersCount: number } | null };


export const DashboardQueryDocument = gql`
    query DashboardQuery {
  dashboard {
    dealersCount
  }
}
    `;

export function useDashboardQueryQuery(options?: Omit<Urql.UseQueryArgs<DashboardQueryQueryVariables>, 'query'>) {
  return Urql.useQuery<DashboardQueryQuery, DashboardQueryQueryVariables>({ query: DashboardQueryDocument, ...options });
};